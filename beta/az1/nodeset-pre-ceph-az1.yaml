---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneNodeSet
metadata:
  name: openstack-edpm-az1
  namespace: openstack
spec:
  env:
  - name: ANSIBLE_FORCE_COLOR
    value: 'True'
  networkAttachments:
  - ctlplane
  nodeTemplate:
    ansible:
      ansiblePort: 22
      ansibleUser: zuul
      ansibleVars:
        edpm_ceph_hci_pre_enabled_services:
        - ceph_mon
        - ceph_mgr
        - ceph_osd
        - ceph_rgw
        - ceph_nfs
        - ceph_rgw_frontend
        - ceph_nfs_frontend
        edpm_fips_mode: check
        edpm_network_config_hide_sensitive_logs: false
        edpm_network_config_os_net_config_mappings:
          edpm-dcn1-compute-0:
            nic1: 52:54:00:6a:e4:b6
            nic2: 52:54:00:42:84:b4
          edpm-dcn1-compute-1:
            nic1: 52:54:00:43:46:04
            nic2: 52:54:00:22:bb:83
          edpm-dcn1-compute-2:
            nic1: 52:54:00:62:4f:07
            nic2: 52:54:00:b9:8c:3a
        edpm_network_config_template: "---\n{% set mtu_list = [ctlplane_mtu] %}\n\
          {% for network in nodeset_networks %}\n{{ mtu_list.append(lookup('vars',\
          \ networks_lower[network] ~ '_mtu')) }}\n{%- endfor %}\n{% set min_viable_mtu\
          \ = mtu_list | max %}\nnetwork_config:\n- type: interface\n  name: nic1\n\
          \  use_dhcp: true\n  mtu: {{ min_viable_mtu }}\n- type: ovs_bridge\n  name:\
          \ {{ neutron_physical_bridge_name }}\n  mtu: {{ min_viable_mtu }}\n  use_dhcp:\
          \ false\n  dns_servers: {{ ctlplane_dns_nameservers }}\n  domain: {{ dns_search_domains\
          \ }}\n  addresses:\n  - ip_netmask: {{ ctlplane_ip }}/{{ ctlplane_cidr }}\n\
          \  routes: {{ ctlplane_host_routes }}\n  members:\n  - type: interface\n\
          \    name: nic2\n    mtu: {{ min_viable_mtu }}\n    # force the MAC address\
          \ of the bridge to this interface\n    primary: true\n{% for network in\
          \ nodeset_networks %}\n  - type: vlan\n    mtu: {{ lookup('vars', networks_lower[network]\
          \ ~ '_mtu') }}\n    vlan_id: {{ lookup('vars', networks_lower[network] ~\
          \ '_vlan_id') }}\n    addresses:\n    - ip_netmask:\n        {{ lookup('vars',\
          \ networks_lower[network] ~ '_ip') }}/{{ lookup('vars', networks_lower[network]\
          \ ~ '_cidr') }}\n    routes: {{ lookup('vars', networks_lower[network] ~\
          \ '_host_routes') }}\n{% endfor %}\n"
        edpm_nodes_validation_validate_controllers_icmp: false
        edpm_nodes_validation_validate_gateway_icmp: false
        edpm_selinux_mode: enforcing
        edpm_sshd_allowed_ranges:
        - 192.168.133.0/24
        - 192.168.122.0/24
        - 192.168.111.0/24
        edpm_sshd_configure_firewall: true
        enable_debug: false
        gather_facts: false
        neutron_physical_bridge_name: br-ex
        neutron_public_interface_name: eth0
        edpm_ovn_bridge_mappings: ["leaf1:br-ex"]
        service_net_map:
          nova_api_network: internalapi
          nova_libvirt_network: internalapi
        storage_mgmt_cidr: '24'
        storage_mgmt_host_routes: []
        storage_mgmt_mtu: 9000
        storage_mgmt_vlan_id: 33
        storage_mtu: 9000
        timesync_ntp_servers:
        - hostname: pool.ntp.org
        edpm_bootstrap_release_version_package: "rhosp-release"
    ansibleSSHPrivateKeySecret: dataplane-ansible-ssh-private-key-secret
    managementNetwork: ctlplane
    networks:
    - defaultRoute: true
      name: ctlplane
      subnetName: subnet2
    - name: internalapi
      subnetName: subnet2
    - name: storage
      subnetName: subnet2
    - name: tenant
      subnetName: subnet2
  nodes:
    edpm-dcn1-compute-0:
      ansible:
        host: 192.168.133.100
      hostName: dcn1-compute-0
      networks:
      - defaultRoute: true
        fixedIP: 192.168.133.100
        name: ctlplane
        subnetName: subnet2
      - name: internalapi
        subnetName: subnet2
      - name: storage
        subnetName: subnet2
      - name: storagemgmt
        subnetName: subnet2
      - name: tenant
        subnetName: subnet2
    edpm-dcn1-compute-1:
      ansible:
        host: 192.168.133.101
      hostName: dcn1-compute-1
      networks:
      - defaultRoute: true
        fixedIP: 192.168.133.101
        name: ctlplane
        subnetName: subnet2
      - name: internalapi
        subnetName: subnet2
      - name: storage
        subnetName: subnet2
      - name: storagemgmt
        subnetName: subnet2
      - name: tenant
        subnetName: subnet2
    edpm-dcn1-compute-2:
      ansible:
        host: 192.168.133.102
      hostName: dcn1-compute-2
      networks:
      - defaultRoute: true
        fixedIP: 192.168.133.102
        name: ctlplane
        subnetName: subnet2
      - name: internalapi
        subnetName: subnet2
      - name: storage
        subnetName: subnet2
      - name: storagemgmt
        subnetName: subnet2
      - name: tenant
        subnetName: subnet2
  preProvisioned: true
  services:
  - bootstrap
  - configure-network
  - validate-network
  - install-os
  - ceph-hci-pre
  - configure-os
  - ssh-known-hosts
  - run-os
  - reboot-os
