---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneDeployment
metadata:
  name: edpm-deployment-az3
  namespace: openstack
spec:
  nodeSets:
  - openstack-edpm-az3
---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneNodeSet
metadata:
  name: openstack-edpm-az3
  namespace: openstack
spec:
  env:
  - name: ANSIBLE_FORCE_COLOR
    value: 'True'
  networkAttachments:
  - ctlplane
  nodeTemplate:
    ansible:
      ansiblePort: 22
      ansibleUser: zuul
      ansibleVars:
        edpm_fips_mode: check
        edpm_iscsid_image: '{{ registry_url }}/openstack-iscsid:{{ image_tag }}'
        edpm_logrotate_crond_image: '{{ registry_url }}/openstack-cron:{{ image_tag
          }}'
        edpm_network_config_hide_sensitive_logs: false
        edpm_network_config_os_net_config_mappings:
          edpm-compute-9:
            nic1: 52:54:00:f9:7c:93
            nic2: 52:54:00:14:7c:cc
        edpm_network_config_template: "---\n{% set mtu_list = [ctlplane_mtu] %}\n\
          {% for network in nodeset_networks %}\n{{ mtu_list.append(lookup('vars',\
          \ networks_lower[network] ~ '_mtu')) }}\n{%- endfor %}\n{% set min_viable_mtu\
          \ = mtu_list | max %}\nnetwork_config:\n- type: ovs_bridge\n  name: {{ neutron_physical_bridge_name\
          \ }}\n  mtu: {{ min_viable_mtu }}\n  use_dhcp: false\n  dns_servers: {{\
          \ ctlplane_dns_nameservers }}\n  domain: {{ dns_search_domains }}\n  addresses:\n\
          \  - ip_netmask: {{ ctlplane_ip }}/{{ ctlplane_cidr }}\n  routes: {{ ctlplane_host_routes\
          \ }}\n  members:\n  - type: interface\n    name: nic2\n    mtu: {{ min_viable_mtu\
          \ }}\n    # force the MAC address of the bridge to this interface\n    primary:\
          \ true\n{% for network in nodeset_networks %}\n  - type: vlan\n    mtu:\
          \ {{ lookup('vars', networks_lower[network] ~ '_mtu') }}\n    vlan_id: {{\
          \ lookup('vars', networks_lower[network] ~ '_vlan_id') }}\n    addresses:\n\
          \    - ip_netmask:\n        {{ lookup('vars', networks_lower[network] ~\
          \ '_ip') }}/{{ lookup('vars', networks_lower[network] ~ '_cidr') }}\n  \
          \  routes: {{ lookup('vars', networks_lower[network] ~ '_host_routes') }}\n\
          {% endfor %}\n"
        edpm_neutron_metadata_agent_image: '{{ registry_url }}/openstack-neutron-metadata-agent-ovn:{{
          image_tag }}'
        edpm_nodes_validation_validate_controllers_icmp: false
        edpm_nodes_validation_validate_gateway_icmp: false
        edpm_nova_compute_container_image: '{{ registry_url }}/openstack-nova-compute:{{
          image_tag }}'
        edpm_nova_libvirt_container_image: '{{ registry_url }}/openstack-nova-libvirt:{{
          image_tag }}'
        edpm_ovn_controller_agent_image: '{{ registry_url }}/openstack-ovn-controller:{{
          image_tag }}'
        edpm_selinux_mode: enforcing
        edpm_sshd_allowed_ranges:
        - 192.168.122.0/24
        - 192.168.111.0/24
        edpm_sshd_configure_firewall: true
        enable_debug: false
        gather_facts: false
        image_tag: current-podified
        neutron_physical_bridge_name: br-ex
        neutron_public_interface_name: eth0
        registry_url: quay.io/podified-antelope-centos9
        service_net_map:
          nova_api_network: internalapi
          nova_libvirt_network: internalapi
        storage_mtu: 9000
        timesync_ntp_servers:
        - hostname: pool.ntp.org
    ansibleSSHPrivateKeySecret: dataplane-ansible-ssh-private-key-secret
    managementNetwork: ctlplane
    networks:
    - defaultRoute: true
      name: ctlplane
      subnetName: subnet1
    - name: internalapi
      subnetName: subnet1
    - name: storage
      subnetName: subnet1
    - name: tenant
      subnetName: subnet1
  nodes:
    edpm-compute-9:
      ansible:
        host: 192.168.122.109
      hostName: compute-9
      networks:
      - defaultRoute: true
        fixedIP: 192.168.122.109
        name: ctlplane
        subnetName: subnet1
      - name: internalapi
        subnetName: subnet1
      - name: storage
        subnetName: subnet1
      - name: tenant
        subnetName: subnet1
  preProvisioned: true
  services:
  - bootstrap
  - configure-network
  - validate-network
  - install-os
  - configure-os
  - run-os
  - reboot-os
  - install-certs
  - ovn
  - neutron-metadata
  - libvirt
  - nova
